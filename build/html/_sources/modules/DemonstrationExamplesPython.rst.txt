Демонстрационные примеры на Python
==================================

Скрипт objcourse.py: определение курса на объект
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Скрипт ``objcourse.py`` демонстрирует использование класса ``ObjCourse`` для подсчета количества объектов интереса на изображении и расчета углового курса на объект. Этот класс предназначен для задач, связанных с обнаружением объектов и навигацией роботизированных систем, таких как подводные или надводные аппараты.

Класс ``ObjCourse`` инициализируется с путями к файлу модели (в формате ``ONNX``) и файлу с именами классов, определяющими, какие объекты могут быть обнаружены. Метод ``get_object_count`` принимает изображение в формате ``cv::Mat`` и возвращает количество обнаруженных объектов. Метод ``get_object_course`` вычисляет угловую поправку курса на объект с учетом горизонтального разрешения камеры (в пикселях) и угла обзора камеры (в градусах). Если на изображении обнаружено несколько объектов, курс рассчитывается на объект с максимальной площадью.

Методы используют предварительно обученную модель (например, основанную на архитектуре ``YOLOv5``), что обеспечивает высокую точность обнаружения. Логирование в коде фиксирует пути к файлам и результаты работы методов, что упрощает отладку и контроль выполнения.

Эта функциональность применима в задачах поиска объектов (например, кораблей) и автоматического управления роботизированными аппаратами для сопровождения цели.

Пример использования

Пример демонстрирует создание экземпляра класса ``ObjCourse``, загрузку изображения, подсчет объектов и расчет курса:

.. code-block:: python

    import cv2
    from pathlib import Path
    import logging
    from mrcv import ObjCourse

    # Настройка логирования
    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
    logger = logging.getLogger(__name__)

    # Пути к файлам
    model_file = Path("files/ship.onnx")
    class_file = Path("files/ship.names")
    ship_file = Path("files/ship.bmp")

    current_path = Path.cwd()
    model_path = current_path / model_file
    class_path = current_path / class_file
    ship_path = current_path / ship_file

    # Создание экземпляра класса
    objcourse = ObjCourse(str(model_path), str(class_path))

    # Загрузка изображения
    frame_ship = cv2.imread(str(ship_path), cv2.IMREAD_COLOR)
    if frame_ship is None:
        logger.error(f"Failed to load image: {ship_path}")

    # Подсчет объектов
    obj_count = objcourse.get_object_count(frame_ship)

    # Расчет курса
    obj_angle = objcourse.get_object_course(frame_ship, 640, 80)

    # Вывод результатов
    logger.info(f"Файл модели: {model_path}")
    logger.info(f"Файл классов: {class_path}")
    logger.info(f"Входное изображение: {ship_path}")
    logger.info(f"Обнаружено объектов: {obj_count}")
    logger.info(f"Курс на цель в градусах: {obj_angle}")

Пример вывода

.. code-block:: text

    2024-10-01 10:00:00 - Файл модели: /path/to/files/ship.onnx
    2024-10-01 10:00:00 - Файл классов: /path/to/files/ship.names
    2024-10-01 10:00:00 - Входное изображение: /path/to/files/ship.bmp
    2024-10-01 10:00:00 - Обнаружено объектов: 1
    2024-10-01 10:00:00 - Курс на цель в градусах: 17.0

В данном случае обнаружен один объект, а курсовая невязка составила 17 градусов вправо относительно центра кадра.
