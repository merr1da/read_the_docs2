Модуль кластеризации
====================

*В данном модуле реализованы алгоритмы кластеризации 3D-точек, полученных из данных стереокамер. Модуль основан на расчёте евклидовых расстояний между точками и оценке их взаимной близости.*

Загрузка данных из файла
~~~~~~~~~~~~~~~~~~~~~~~~
*Загружает координаты 3D-точек из текстового файла и сохраняет их во внутреннюю структуру данных.*

.. code-block:: cpp

    void mrcv::DenseStereo::loadDataFromFile(const std::string& filename)

**Описание параметров:**
- ``filename`` — путь к текстовому файлу с координатами.

**Назначение:** очищает внутренние данные и заполняет список ``xyz`` из файла.


Кластеризация загруженных данных
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*Выполняет кластеризацию точек в 3D пространстве на основе расстояний между ними.*

.. code-block:: cpp

    void mrcv::DenseStereo::makeClustering()

**Назначение:**
- рассчитывает матрицу расстояний между всеми точками,
- нормализует расстояния,
- формирует логическую матрицу близости ``L``,
- группирует точки в кластеры,
- присваивает каждой точке индекс её кластера,
- сохраняет результат в файл ``files/clusters_data.txt``.

**Внутренние параметры:**
- ``IDX`` — вектор, содержащий индексы кластеров для каждой точки.

**Промежуточные структуры:** используются многопоточность, нормализация, логические маски.


Печать информации о кластерах
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*Формирует и записывает в лог информацию о результатах кластеризации.*

.. code-block:: cpp

    void mrcv::DenseStereo::printClusters()

**Назначение:**
- выводит количество точек и количество найденных кластеров в лог.

**Тип логирования:**
- ``LOGTYPE::INFO``

Для хранения результата кластеризации используются поля класса:
- ``IDX`` — список принадлежности точек к кластерам,
- ``vuxyzrgb.xyz`` — координаты исходных точек.